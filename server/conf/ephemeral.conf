samantha.ephemeral {
  engineType = "RECOMMENDER"
  simpleDaosConfig {
    entityDaoKey = "entityDaoName"
    RequestEntityDAO {
      daoConfigClass = "org.grouplens.samantha.server.dao.RequestEntityDAOConfig"
      entitiesKey = "entities"
    }
    CSVFileEntityDAO {
      daoConfigClass = "org.grouplens.samantha.server.dao.CSVFileDAOConfig"
      filePathKey = "filePath"
      separatorKey = "separator"
    }
    CSVFileListEntityDAO {
      daoConfigClass = "org.grouplens.samantha.server.dao.CSVFileListDAOConfig"
      filesKey = "files"
      separatorKey = "separator"
    }
    CSVDirEntityDAO {
      daoConfigClass = "org.grouplens.samantha.server.dao.CSVDirDAOConfig"
      dirPathKey = "dirPath"
      separatorKey = "separator"
    }
    RequestItemIDListDAO {
      daoConfigClass = "org.grouplens.samantha.server.dao.RequestItemIDListDAOConfig"
      attrName = "movieId"
      itemListKey = "movieIds"
    }
    IndexerBasedDAO {
      daoConfigClass = "org.grouplens.samantha.server.dao.IndexerBasedDAOConfig"
      indexerNameKey = "indexerName"
      indexerReqKey = "requestContext"
    }
  }
  entityDaosConfig = ${samantha.ephemeral.simpleDaosConfig}
  entityDaosConfig.TimeFilteredDAO {
    daoConfigClass = "org.grouplens.samantha.server.dao.TimeFilteredDAOConfig"
    entityDaosConfig = ${samantha.ephemeral.simpleDaosConfig}
    timestampField = "tstamp"
    beginTimeKey = "beginTime"
    endTimeKey = "endTime"
    subDaoConfigKey = "subDaoConfig"
  }
  indexers = [
    {
      name = "loggerBasedIndexer"
      configClass = "org.grouplens.samantha.server.indexer.LoggerBasedIndexerConfig"
    }, {
      name = "userMovieRating"
      configClass = "org.grouplens.samantha.server.indexer.CSVFileIndexerConfig"
      indexType = "expt-userMovieRating"
      filesKey = "files"
      separatorKey = "separator"
      dataFields = ["userId", "movieId", "rating", "tstamp"]
      timestampField = "tstamp"
      daoName = "TimeFilteredDAO"
      daoNameKey = "entityDaoName"
      subDaoName = "CSVFileListEntityDAO"
      subDaoConfigKey = "subDaoConfig"
      beginTimeKey = "beginTime"
      endTimeKey = "endTime"
      daoConfigKey = "daoConfig"
      entityDaosConfig = ${samantha.ephemeral.entityDaosConfig}
    }, {
      name = "groupedUserMovieRating"
      configClass = "org.grouplens.samantha.server.indexer.GroupedIndexerConfig"
      dependedIndexer = "userMovieRating"
      filesKey = "files"
      separatorKey = "separator"
      dataFields = ["userId", "movieId", "rating", "tstamp"]
      daoName = "CSVFileListEntityDAO"
      daoNameKey = "entityDaoName"
      groupKeys = ["userId"]
      numBuckets = 50
      separator = "\t"
      dataDir = ${samantha.dataDir}"/groupedUserMovieRating"
      dataDirKey = "dataDir"
      daoConfigKey = "daoConfig"
      entityDaosConfig = ${samantha.ephemeral.entityDaosConfig}
    }
  ]
  retrievers = [
    {
      name = "FeatureSupportMovieRetriever"
      configClass = "org.grouplens.samantha.server.retriever.FeatureSupportRetrieverConfig"
      maxHits = 500
      itemAttrs = ["movieId"]
      supportAttr = "support"
      predictorName = "expt-rating-predictor"
      modelName = "expt-rating-predictor-model"
    }
  ]
  predictors = [{
    name = "expt-rating-predictor"
    configClass = "org.grouplens.samantha.server.predictor.SVDFeaturePredictorConfig"
    modelName = "expt-rating-predictor-model"
    modelFile = ${samantha.modelDir}"/expt-rating-predictor-model.bin"
    labelName = "rating"
    weightName = "weight"
    entityDaosConfig = ${samantha.ephemeral.entityDaosConfig}
    daoConfigKey = "daoConfig"
    serializedKey = "serialized"
    instanceName = "instance"
    evaluatorNames = ["RealPredictionEvaluator"]
    groupKeys = ["userId"]
    featurizer {
      featureExtractorList = [
        {
          extractorConfigClass = "org.grouplens.samantha.server.featurizer.ConstantOneExtractorConfig"
          indexName = "BIASES"
          attrName = "globalBias"
          feaName = "globalBias"
        }, {
          extractorConfigClass = "org.grouplens.samantha.server.featurizer.StringValueExtractorConfig"
          indexName = "BIASES"
          attrName = "userId"
          feaName = "userBias"
        }, {
          extractorConfigClass = "org.grouplens.samantha.server.featurizer.StringValueExtractorConfig"
          attrName = "movieId"
          indexName = "BIASES"
          feaName = "movieBias"
        }, {
          extractorConfigClass = "org.grouplens.samantha.server.featurizer.StringValueExtractorConfig"
          indexName = "FACTORS"
          attrName = "userId"
          feaName = "userFactor"
        }, {
          extractorConfigClass = "org.grouplens.samantha.server.featurizer.StringValueExtractorConfig"
          attrName = "movieId"
          indexName = "FACTORS"
          feaName = "movieFactor"
        }
      ]
    }
    objectiveConfig {
      objectiveClass = "org.grouplens.samantha.server.objective.L2NormLossConfig"
      N = 24
      sigma = 1.0
      threshold = 4.0
    }
    onlineOptimizationMethod {
      methodClass = "org.grouplens.samantha.server.solver.StochasticGradientDescentConfig"
      maxIter = 1
      learningRate = 0.001
      l2coef = 0.5
    }
    optimizationMethod {
      methodClass = "org.grouplens.samantha.server.solver.StochasticGradientDescentConfig"
      maxIter = 50
      learningRate = 0.001
      l2coef = 0.5
      cachePath = ${samantha.dataDir}"/cachePath"
    }
    factDim = 30
    biasFeas = ["globalBias", "userBias", "movieBias"]
    ufactFeas = ["userFactor"]
    ifactFeas = ["movieFactor"]
  }]
  rankers = [{
    name = "RatingPredictorBasedRanker"
    configClass = "org.grouplens.samantha.server.ranker.PredictorBasedRankerConfig"
    predictor = "expt-rating-predictor"
    pageSize = 24
  }, {
    name = "EphemeralRanker"
    configClass = "org.grouplens.samantha.ephemeral.EphemeralRankerConfig"
    svdfeaturePredictor = ""
    svdfeatureModel = ""
    pageSize = 24
  }]
  recommenders = [{
    name = "expt-rating-recommender"
    configClass = "org.grouplens.samantha.server.recommender.StandardRecommenderConfig"
    retriever = "FeatureSupportMovieRetriever"
    ranker = "RatingPredictorBasedRanker"
  }]
  router {
    configClass = "org.grouplens.samantha.server.router.BasicRouterConfig"
    recommenderKey = "recommender"
    predictorKey = "predictor"
  }
  evaluators = [
    {
      name = "RealPredictionEvaluator"
      configClass = "org.grouplens.samantha.server.evaluator.PredictionEvaluatorConfig"
      predictionIndexers = []
      indexers = ["loggerBasedIndexer"]
      predictorKey = "predictor"
      groupKeys = ["userId"]
      entityDaosConfig = ${samantha.ephemeral.entityDaosConfig}
      daoConfigKey = "evaluatorDaoConfig"
      metrics = [
        {
          metricConfigClass = "org.grouplens.samantha.server.evaluator.metric.MAEConfig"
          labelName = "rating"
        }, {
          metricConfigClass = "org.grouplens.samantha.server.evaluator.metric.RMSEConfig"
          labelName = "rating"
        }
      ]
    }, {
      name = "RecommendationEvaluator"
      configClass = "org.grouplens.samantha.server.evaluator.RecommendationEvaluatorConfig"
      recommendationIndexers = []
      indexers = ["loggerBasedIndexer"]
      recommenderKey = "recommender"
      entityDaosConfig = ${samantha.ephemeral.entityDaosConfig}
      daoConfigKey = "evaluatorDaoConfig"
      groupKeys = ["userId"]
      metrics = [
        {
          metricConfigClass = "org.grouplens.samantha.server.evaluator.metric.MAPConfig"
          itemKeys = ["movieId"]
          relevanceKey = "rating"
          threshold = 4.0
          N = [8, 24]
        }, {
          metricConfigClass = "org.grouplens.samantha.server.evaluator.metric.NDCGConfig"
          itemKeys = ["movieId"]
          relevanceKey = "rating"
          N = [8, 24]
        }
      ]
    }
  ]
  schedulers = []
}
