samantha.movielens {
  engineType = "RECOMMENDER"
  elasticSearchIndex = "movielens"
  elasticSearchMapping {
    userMovieInteraction {
      properties {
        userId {
          type = "string"
          index = "not_analyzed"
        }
        movieId {
          type = "string"
          index = "not_analyzed"
        }
        interaction {
          type = "integer"
        }
        interest {
          type = "float"
        }
        tstamp {
          type = "integer"
        }
      }
    }
    movieData {
      properties {
        movieId {
          type = "string"
          index = "not_analyzed"
        }
        releaseYear {
          type = "float"
        }
        popularity {
          type = "float"
        }
      }
    }
    userMovieFilter {
      properties {
        userId {
          type = "string"
          index = "not_analyzed"
        }
        movieId {
          type = "string"
          index = "not_analyzed"
        }
      }
    }
  }
  entityDaosConfig {
    entityDaoKey = "entityDaoName"
    RequestEntityDAO {
      daoConfigClass = "org.grouplens.samantha.server.dao.RequestEntityDAOConfig"
      entitiesKey = "entities"
    }
    CSVFileEntityDAO {
      daoConfigClass = "org.grouplens.samantha.server.dao.CSVFileEntityDAOConfig"
      filePathKey = "filePath"
      separatorKey = "separator"
    }
    RequestItemIDListDAO {
      daoConfigClass = "org.grouplens.samantha.server.dao.RequestItemIDListDAOConfig"
      attrName = "movieId"
      itemListKey = "movieIds"
    }
  }
  predictorExpandersConfig = [
    {
      expanderClass = "org.grouplens.samantha.server.expander.RequestBasedExpander"
      requestFields = ["userId"]
    }
  ]
  retrievers = [
    {
      name = "RedisMovieRetriever"
      configClass = "org.grouplens.samantha.server.retriever.RedisInteractionRetrieverConfig"
      redisKeyBasedRetrieverName = "RedisUserMovieInteractionRetriever"
      knnModelName = "itemKnnModel"
      kdnModelName = "itemKdnModel"
      knnModelFile = "data/models/itemKnnModel.bin"
      kdnModelFile = "data/models/itemKdnModel.bin"
      predictorName = "spirit-rating"
      predictorModelName = "spirit-rating-model"
      numNeighbors = 30
      minSupport = 10
      itemAttrs = ["movieId"]
      scoreAttr = "redisMovieRetrieverScore"
      weightAttr = "interest"
      expandersConfig = [
        {
          expanderClass = "org.grouplens.samantha.server.expander.RetrieverBasedItemFilterExpander"
          retrieverName = "RequestBasedRetrieverWithoutExpander"
          itemAttrs = ["movieId"]
          exclude = false
        }, {
          expanderClass = "org.grouplens.samantha.server.expander.RedisBasedJoinExpander"
          expandFields = [
            {
              prefix = "movieData"
              keys = ["movieId"]
              fields = ["movieId", "releaseYear", "popularity"]
            }
          ]
        }, {
          expanderClass = "org.grouplens.samantha.server.expander.FieldThresholdFilterExpander"
          filterAttr = "popularity"
          minVal = 100
        }
      ]
    }, {
      name = "RequestBasedMovieRetriever"
      configClass = "org.grouplens.samantha.server.retriever.RequestBasedRetrieverConfig"
      entityDaosConfig = ${samantha.movielens.entityDaosConfig}
      daoConfigKey = "daoConfig"
      expandersConfig = [
        {
          expanderClass = "org.grouplens.samantha.server.expander.RedisBasedJoinExpander"
          expandFields = [
            {
              prefix = "movieData"
              keys = ["movieId"]
              fields = ["movieId", "releaseYear", "popularity"]
            }
          ]
        }, {
          expanderClass = "org.grouplens.samantha.server.expander.FieldThresholdFilterExpander"
          filterAttr = "popularity"
          minVal = 100
        }
      ]
    }, {
      name = "FeatureSupportMovieRetriever"
      configClass = "org.grouplens.samantha.server.retriever.FeatureSupportRetrieverConfig"
      maxHits = 500
      itemAttrs = ["movieId"]
      supportAttr = "support"
      predictorName = "spirit-rating"
      modelName = "spirit-rating-model"
      expandersConfig = [
        {
          expanderClass = "org.grouplens.samantha.server.expander.RetrieverBasedItemFilterExpander"
          retrieverName = "RequestBasedRetrieverWithoutExpander"
          itemAttrs = ["movieId"]
          exclude = false
        }, {
          expanderClass = "org.grouplens.samantha.server.expander.RedisBasedJoinExpander"
          expandFields = [
            {
              prefix = "movieData"
              keys = ["movieId"]
              fields = ["movieId", "releaseYear", "popularity"]
            }
          ]
        }, {
          expanderClass = "org.grouplens.samantha.server.expander.FieldThresholdFilterExpander"
          filterAttr = "popularity"
          minVal = 100
        }
      ]
    }, {
      name = "MultipleBlendingMovieRetriever"
      configClass = "org.grouplens.samantha.server.retriever.MultipleBlendingRetrieverConfig"
      itemAttrs = ["movieId"]
      maxHits = 500
      retrieverNames = ["RedisMovieRetriever", "FeatureSupportMovieRetriever", "RequestBasedMovieRetriever"]
    }, {
      name = "RequestBasedRetrieverWithoutExpander"
      configClass = "org.grouplens.samantha.server.retriever.RequestBasedRetrieverConfig"
      entityDaosConfig = ${samantha.movielens.entityDaosConfig}
      daoConfigKey = "daoConfig"
    }, {
      name = "RequestBasedRetriever"
      configClass = "org.grouplens.samantha.server.retriever.RequestBasedRetrieverConfig"
      entityDaosConfig = ${samantha.movielens.entityDaosConfig}
      daoConfigKey = "daoConfig"
      expandersConfig = [
        {
          expanderClass = "org.grouplens.samantha.server.expander.RedisBasedJoinExpander"
          expandFields = [
            {
              prefix = "movieData"
              keys = ["movieId"]
              fields = ["movieId", "releaseYear", "popularity"]
            }
          ]
        }
      ]
    }, {
      name = "RedisUserMovieInteractionRetriever"
      configClass = "org.grouplens.samantha.server.retriever.RedisKeyBasedRetrieverConfig"
      retrieveFields = ["userId", "movieId", "interaction", "interest", "tstamp"]
      keyFields = ["userId"]
      indexPrefix = "userMovieInteraction"
    }, {
      name = "RedisMovieFilterRetriever"
      configClass = "org.grouplens.samantha.server.retriever.RedisKeyBasedRetrieverConfig"
      retrieveFields = ["userId", "movieId"]
      keyFields = ["userId"]
      indexPrefix = "userMovieFilter"
    }
  ]
  indexers = [
    {
      name = "StandardOutputIndexer"
      configClass = "org.grouplens.samantha.server.indexer.StandardOutputIndexerConfig"
    }, {
      name = "RedisBasedIndexer"
      configClass = "org.grouplens.samantha.server.indexer.RedisBasedIndexerConfig"
      indexPrefixKey = "indexPrefix"
      indexStructureKey = "indexStructure"
      sortFieldKey = "sortField"
      hashFieldsKey = "hashFields"
      keyFieldsKey = "keyFields"
      entityDaosConfig = ${samantha.movielens.entityDaosConfig}
      daoConfigKey = "IndexDaoConfig"
    }
  ]
  predictors = [
    {
      name = "spirit-action"
      configClass = "org.grouplens.samantha.server.predictor.SVDFeaturePredictorConfig"
      modelName = "spirit-action-model"
      modelFile = "data/models/actionSVDFeature.bin"
      labelName = "action"
      weightName = "weight"
      entityDaosConfig = ${samantha.movielens.entityDaosConfig}
      daoConfigKey = "daoConfig"
      serializedKey = "serialized"
      instanceName = "instance"
      expandersConfig = ${samantha.movielens.predictorExpandersConfig}
      featurizer {
        featureExtractorList = [
          {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.ConstantOneExtractorConfig"
            indexName = "BIASES"
            attrName = "globalBias"
            feaName = "globalBias"
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.StringValueExtractorConfig"
            indexName = "BIASES"
            attrName = "userId"
            feaName = "userBias"
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.StringValueExtractorConfig"
            attrName = "movieId"
            indexName = "BIASES"
            feaName = "itemBias"
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.StringValueExtractorConfig"
            indexName = "FACTORS"
            attrName = "userId"
            feaName = "userFactor"
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.StringValueExtractorConfig"
            attrName = "movieId"
            indexName = "FACTORS"
            feaName = "itemFactor"
          }
        ]
      }
      lossFunctionClass = "org.grouplens.samantha.modeler.solver.LogisticLoss"
      onlineOptimizationMethod {
        methodClass = "org.grouplens.samantha.server.solver.StochasticGradientDescentConfig"
        maxIter = 1
        learningRate = 0.001
        l2coef = 0.0
      }
      optimizationMethod {
        methodClass = "org.grouplens.samantha.server.solver.InstanceCachedAsyncParallelSGDConfig"
        maxIter = 50
        learningRate = 0.001
        l2coef = 0.0
        cachePath = "/opt/samantha/movielens"
      }
      factDim = 30
      biasFeas = ["globalBias", "userBias", "itemBias"]
      ufactFeas = ["userFactor"]
      ifactFeas = ["itemFactor"]
    }, {
      name = "spirit-rating"
      configClass = "org.grouplens.samantha.server.predictor.SVDFeaturePredictorConfig"
      modelName = "spirit-rating-model"
      modelFile = "data/models/ratingSVDFeature.bin"
      labelName = "rating"
      weightName = "weight"
      entityDaosConfig = ${samantha.movielens.entityDaosConfig}
      daoConfigKey = "daoConfig"
      serializedKey = "serialized"
      instanceName = "instance"
      expandersConfig = ${samantha.movielens.predictorExpandersConfig}
      featurizer {
        featureExtractorList = [
          {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.ConstantOneExtractorConfig"
            indexName = "BIASES"
            attrName = "globalBias"
            feaName = "globalBias"
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.StringValueExtractorConfig"
            indexName = "BIASES"
            attrName = "userId"
            feaName = "userBias"
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.StringValueExtractorConfig"
            attrName = "movieId"
            indexName = "BIASES"
            feaName = "itemBias"
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.StringValueExtractorConfig"
            indexName = "FACTORS"
            attrName = "userId"
            feaName = "userFactor"
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.StringValueExtractorConfig"
            attrName = "movieId"
            indexName = "FACTORS"
            feaName = "itemFactor"
          }
        ]
      }
      lossFunctionClass = "org.grouplens.samantha.modeler.solver.L2NormLoss"
      onlineOptimizationMethod {
        methodClass = "org.grouplens.samantha.server.solver.StochasticGradientDescentConfig"
        maxIter = 1
        learningRate = 0.001
        l2coef = 0.0
      }
      optimizationMethod {
        methodClass = "org.grouplens.samantha.server.solver.InstanceCachedAsyncParallelSGDConfig"
        maxIter = 50
        learningRate = 0.001
        l2coef = 0.0
        cachePath = "/opt/samantha/movielens"
      }
      factDim = 30
      biasFeas = ["globalBias", "userBias", "itemBias"]
      ufactFeas = ["userFactor"]
      ifactFeas = ["itemFactor"]
    }, {
      name = "spirit-reinforce-all"
      configClass = "org.grouplens.samantha.server.predictor.LinearUCBPredictorConfig"
      modelName = "spirit-reinforce-all-model"
      modelFile = "data/models/reinforceAllLinearUCB.bin"
      labelName = "delayedReward"
      weightName = "weight"
      entityDaosConfig = ${samantha.movielens.entityDaosConfig}
      daoConfigKey = "daoConfig"
      serializedKey = "serialized"
      instanceName = "instance"
      expandersConfig = [
        {
          expanderClass = "org.grouplens.samantha.server.expander.RequestBasedExpander"
          requestFields = ["userId", "state-releaseYearPercentile", "state-popularityPercentile",
            "state-predRatingPercentile", "state-predActionPercentile"]
        }, {
          expanderClass = "org.grouplens.samantha.server.expander.PredictorBasedExpander"
          predictorName = "spirit-rating"
          scoreAttr = "predRating"
        }, {
          expanderClass = "org.grouplens.samantha.server.expander.PredictorBasedExpander"
          predictorName = "spirit-action"
          scoreAttr = "predAction"
        }, {
          expanderClass = "org.grouplens.samantha.server.expander.PercentileExpander"
          modelName = "spirit-bandit-all-percentile-model"
          attrNames = ["predRating", "predAction", "releaseYear", "popularity"]
          sampleRate = 0.1
          maxNumValues = 100
        }, {
          expanderClass = "org.grouplens.samantha.server.reinforce.QLearningExpander"
          recommenderName = "spirit-reinforce-all"
          rewardAttr = "reward"
          delayedRewardAttr = "delayedReward"
          decay = 1.0
          transitionerConfig {
            transitionerClass = "org.grouplens.samantha.server.reinforce.SimpleAverageTransitioner"
            actionAttrs = ["predRatingPercentile", "predActionPercentile", "releaseYearPercentile", "popularityPercentile"]
            stateKeys = ["userId"]
            stateModelName = "spirit-reinforce-all-user-state-model"
            stateModelFile = "data/models/reinforceAllUserState.bin"
            updateKey = "updateState"
          }
          recommendKey = "recommend"
          sampleRate = 0.0001
        }
      ]
      featurizer {
        featureExtractorList = [
          {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.ConstantOneExtractorConfig"
            indexName = "BIASES"
            attrName = "globalBias"
            feaName = "globalBias"
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.IdentityExtractorConfig"
            indexName = "BIASES"
            attrName = "predRatingPercentile"
            feaName = "predRating"
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.IdentityExtractorConfig"
            indexName = "BIASES"
            attrName = "predActionPercentile"
            feaName = "predAction"
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.IdentityExtractorConfig"
            indexName = "BIASES"
            attrName = "releaseYearPercentile"
            feaName = "releaseYear"
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.IdentityExtractorConfig"
            indexName = "BIASES"
            attrName = "popularityPercentile"
            feaName = "popularity"
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.MultiplicativeInteractionExtractorConfig"
            indexName = "BIASES"
            attrNames = ["predRatingPercentile", "state-predRatingPercentile"]
            feaName = "predRatingInt"
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.MultiplicativeInteractionExtractorConfig"
            indexName = "BIASES"
            attrNames = ["predActionPercentile", "state-predActionPercentile"]
            feaName = "predActionInt"
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.MultiplicativeInteractionExtractorConfig"
            indexName = "BIASES"
            attrNames = ["releaseYearPercentile", "state-releaseYearPercentile"]
            feaName = "releaseYearInt"
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.MultiplicativeInteractionExtractorConfig"
            indexName = "BIASES"
            attrNames = ["popularityPercentile", "state-popularityPercentile"]
            feaName = "popularityInt"
          }
        ]
      }
      lambda = 10
      alpha = 0.0
      onlineOptimizationMethod {
        methodClass = "org.grouplens.samantha.server.solver.StochasticGradientDescentConfig"
        maxIter = 3
        learningRate = 1.0
        l2coef = 0.0
        tol = 0.0
      }
      features = [
        "globalBias", "predRating", "predAction", "releaseYear", "popularity",
        "predRatingInt", "predActionInt", "releaseYearInt", "popularityInt",
      ]
      numMainFeatures = 5
    }, {
      name = "spirit-bandit-state"
      configClass = "org.grouplens.samantha.server.predictor.LinearUCBPredictorConfig"
      modelName = "spirit-bandit-state-model"
      modelFile = "data/models/banditStateLinearUCB.bin"
      labelName = "action"
      weightName = "weight"
      entityDaosConfig = ${samantha.movielens.entityDaosConfig}
      daoConfigKey = "daoConfig"
      serializedKey = "serialized"
      instanceName = "instance"
      expandersConfig = [
        {
          expanderClass = "org.grouplens.samantha.server.expander.PredictorBasedExpander"
          predictorName = "spirit-rating"
          scoreAttr = "predRating"
        }, {
          expanderClass = "org.grouplens.samantha.server.expander.PredictorBasedExpander"
          predictorName = "spirit-action"
          scoreAttr = "predAction"
        }, {
          expanderClass = "org.grouplens.samantha.server.expander.PercentileExpander"
          modelName = "spirit-bandit-all-percentile-model"
          attrNames = ["predRating", "predAction", "releaseYear", "popularity"]
          sampleRate = 0.1
          maxNumValues = 100
        }, {
          expanderClass = "org.grouplens.samantha.server.reinforce.QLearningExpander"
          recommenderName = "spirit-bandit-state"
          rewardAttr = "reward"
          delayedRewardAttr = "delayedReward"
          decay = 1.0
          transitionerConfig {
            transitionerClass = "org.grouplens.samantha.server.reinforce.SimpleAverageTransitioner"
            actionAttrs = ["predRatingPercentile", "predActionPercentile", "releaseYearPercentile", "popularityPercentile"]
            stateKeys = ["userId"]
            stateModelName = "spirit-bandit-state-user-state-model"
            stateModelFile = "data/models/banditStateUserState.bin"
            updateKey = "updateState"
          }
          recommendKey = "recommend"
          sampleRate = 0.01
        }
      ]
      featurizer {
        featureExtractorList = [
          {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.ConstantOneExtractorConfig"
            indexName = "BIASES"
            attrName = "globalBias"
            feaName = "globalBias"
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.IdentityExtractorConfig"
            indexName = "BIASES"
            attrName = "predRatingPercentile"
            feaName = "predRating"
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.IdentityExtractorConfig"
            indexName = "BIASES"
            attrName = "predActionPercentile"
            feaName = "predAction"
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.IdentityExtractorConfig"
            indexName = "BIASES"
            attrName = "releaseYearPercentile"
            feaName = "releaseYear"
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.IdentityExtractorConfig"
            indexName = "BIASES"
            attrName = "popularityPercentile"
            feaName = "popularity"
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.MultiplicativeInteractionExtractorConfig"
            indexName = "BIASES"
            attrNames = ["predRatingPercentile", "state-predRatingPercentile"]
            feaName = "predRatingInt"
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.MultiplicativeInteractionExtractorConfig"
            indexName = "BIASES"
            attrNames = ["predActionPercentile", "state-predActionPercentile"]
            feaName = "predActionInt"
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.MultiplicativeInteractionExtractorConfig"
            indexName = "BIASES"
            attrNames = ["releaseYearPercentile", "state-releaseYearPercentile"]
            feaName = "releaseYearInt"
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.MultiplicativeInteractionExtractorConfig"
            indexName = "BIASES"
            attrNames = ["popularityPercentile", "state-popularityPercentile"]
            feaName = "popularityInt"
          }
        ]
      }
      lambda = 10
      alpha = 0.0
      onlineOptimizationMethod {
        methodClass = "org.grouplens.samantha.server.solver.StochasticGradientDescentConfig"
        maxIter = 1
        learningRate = 1.0
        l2coef = 0.0
        tol = 0.0
      }
      features = [
        "globalBias", "predRating", "predAction", "releaseYear", "popularity",
        "predRatingInt", "predActionInt", "releaseYearInt", "popularityInt",
      ]
      numMainFeatures = 5
    }, {
      name = "spirit-bandit-two"
      configClass = "org.grouplens.samantha.server.predictor.LinearUCBPredictorConfig"
      modelName = "spirit-bandit-two-model"
      modelFile = "data/models/banditTwoLinearUCB.bin"
      labelName = "action"
      weightName = "weight"
      entityDaosConfig = ${samantha.movielens.entityDaosConfig}
      daoConfigKey = "daoConfig"
      serializedKey = "serialized"
      instanceName = "instance"
      expandersConfig = [
        {
          expanderClass = "org.grouplens.samantha.server.expander.PredictorBasedExpander"
          predictorName = "spirit-rating"
          scoreAttr = "predRating"
        }, {
          expanderClass = "org.grouplens.samantha.server.expander.PredictorBasedExpander"
          predictorName = "spirit-action"
          scoreAttr = "predAction"
        }, {
          expanderClass = "org.grouplens.samantha.server.expander.PercentileExpander"
          modelName = "spirit-bandit-all-percentile-model"
          attrNames = ["predRating", "predAction"]
          sampleRate = 0.1
          maxNumValues = 100
        }
      ]
      featurizer {
        featureExtractorList = [
          {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.ConstantOneExtractorConfig"
            indexName = "BIASES"
            attrName = "globalBias"
            feaName = "globalBias"
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.IdentityExtractorConfig"
            indexName = "BIASES"
            attrName = "predRatingPercentile"
            feaName = "predRating"
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.IdentityExtractorConfig"
            indexName = "BIASES"
            attrName = "predActionPercentile"
            feaName = "predAction"
          }
        ]
      }
      lambda = 10
      alpha = 0.0
      onlineOptimizationMethod {
        methodClass = "org.grouplens.samantha.server.solver.StochasticGradientDescentConfig"
        maxIter = 1
        learningRate = 1.0
        l2coef = 0.0
        tol = 0.0
      }
      features = ["globalBias", "predRating", "predAction"]
      numMainFeatures = 3
    }, {
      name = "spirit-bandit-all"
      configClass = "org.grouplens.samantha.server.predictor.LinearUCBPredictorConfig"
      modelName = "spirit-bandit-all-model"
      modelFile = "data/models/banditAllLinearUCB.bin"
      labelName = "action"
      weightName = "weight"
      entityDaosConfig = ${samantha.movielens.entityDaosConfig}
      daoConfigKey = "daoConfig"
      serializedKey = "serialized"
      instanceName = "instance"
      expandersConfig = [
        {
          expanderClass = "org.grouplens.samantha.server.expander.PredictorBasedExpander"
          predictorName = "spirit-rating"
          scoreAttr = "predRating"
        }, {
          expanderClass = "org.grouplens.samantha.server.expander.PredictorBasedExpander"
          predictorName = "spirit-action"
          scoreAttr = "predAction"
        }, {
          expanderClass = "org.grouplens.samantha.server.expander.PercentileExpander"
          modelName = "spirit-bandit-all-percentile-model"
          modelFile = "data/models/banditAllPercentileModel.bin"
          sampleRate = 0.1
          maxNumValues = 100
          attrNamesKey = "attrNames"
          attrNames = ["predRating", "predAction", "releaseYear", "popularity"]
          daoConfigKey = "daoConfig"
          entityDaosConfig = ${samantha.movielens.entityDaosConfig}
          attrName2Config {
            predRating {
              numValues = 50
              expandersConfig = [
                {
                  expanderClass = "org.grouplens.samantha.server.expander.PredictorBasedExpander"
                  predictorName = "spirit-rating"
                  scoreAttr = "predRating"
                }
              ]
            }
            predAction {
              numValues = 50
              expandersConfig = [
                {
                  expanderClass = "org.grouplens.samantha.server.expander.PredictorBasedExpander"
                  predictorName = "spirit-action"
                  scoreAttr = "predAction"
                }
              ]
            }
            releaseYear {
              numValues = 50
            }
            popularity {
              numValues = 50
            }
          }
        }
      ]
      featurizer {
        featureExtractorList = [
          {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.ConstantOneExtractorConfig"
            indexName = "BIASES"
            attrName = "globalBias"
            feaName = "globalBias"
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.IdentityExtractorConfig"
            indexName = "BIASES"
            attrName = "predRatingPercentile"
            feaName = "predRating"
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.IdentityExtractorConfig"
            indexName = "BIASES"
            attrName = "predActionPercentile"
            feaName = "predAction"
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.IdentityExtractorConfig"
            indexName = "BIASES"
            attrName = "releaseYearPercentile"
            feaName = "releaseYear"
          }, {
            extractorConfigClass = "org.grouplens.samantha.server.featurizer.IdentityExtractorConfig"
            indexName = "BIASES"
            attrName = "popularityPercentile"
            feaName = "popularity"
          }
        ]
      }
      lambda = 10
      alpha = 0.0
      onlineOptimizationMethod {
        methodClass = "org.grouplens.samantha.server.solver.StochasticGradientDescentConfig"
        maxIter = 1
        learningRate = 1.0
        l2coef = 0.0
        tol = 0.0
      }
      features = [
        "globalBias", "predRating", "predAction", "releaseYear", "popularity"
      ]
      numMainFeatures = 5
    }
  ]
  rankers = [
    {
      name = "RatingPredictorBasedRanker"
      configClass = "org.grouplens.samantha.server.ranker.PredictorBasedRankerConfig"
      predictor = "spirit-rating"
      pageSize = 24
    }, {
      name = "ActionPredictorBasedRanker"
      configClass = "org.grouplens.samantha.server.ranker.PredictorBasedRankerConfig"
      predictor = "spirit-action"
      pageSize = 24
      expandersConfig = [
        {
          expanderClass = "org.grouplens.samantha.server.expander.PredictorBasedExpander"
          predictorName = "spirit-rating"
          scoreAttr = "predRating"
        }
      ]
    }, {
      name = "BanditStatePredictorBasedRanker"
      configClass = "org.grouplens.samantha.server.ranker.PredictorBasedRankerConfig"
      predictor = "spirit-bandit-state"
      pageSize = 24
    }, {
      name = "BanditTwoPredictorBasedRanker"
      configClass = "org.grouplens.samantha.server.ranker.PredictorBasedRankerConfig"
      predictor = "spirit-bandit-two"
      pageSize = 24
    }, {
      name = "BanditAllPredictorBasedRanker"
      configClass = "org.grouplens.samantha.server.ranker.PredictorBasedRankerConfig"
      predictor = "spirit-bandit-all"
      pageSize = 24
    }, {
      name = "ReinforceAllPredictorBasedRanker"
      configClass = "org.grouplens.samantha.server.ranker.PredictorBasedRankerConfig"
      predictor = "spirit-reinforce-all"
      pageSize = 24
    }, {
      name = "BanditStatePredictorBasedRanker"
      configClass = "org.grouplens.samantha.server.ranker.PredictorBasedRankerConfig"
      predictor = "spirit-bandit-state"
      pageSize = 24
    }
  ]
  recommenders = [
    {
      name = "spirit-rating"
      configClass = "org.grouplens.samantha.server.recommender.StandardRecommenderConfig"
      retriever = "MultipleBlendingMovieRetriever"
      ranker = "RatingPredictorBasedRanker"
    }, {
      name = "spirit-action"
      configClass = "org.grouplens.samantha.server.recommender.StandardRecommenderConfig"
      retriever = "MultipleBlendingMovieRetriever"
      ranker = "ActionPredictorBasedRanker"
    }, {
      name = "spirit-bandit-all"
      configClass = "org.grouplens.samantha.server.recommender.StandardRecommenderConfig"
      retriever = "MultipleBlendingMovieRetriever"
      ranker = "BanditAllPredictorBasedRanker"
    }, {
      name = "spirit-bandit-two"
      configClass = "org.grouplens.samantha.server.recommender.StandardRecommenderConfig"
      retriever = "MultipleBlendingMovieRetriever"
      ranker = "BanditTwoPredictorBasedRanker"
    }, {
      name = "spirit-reinforce-all"
      configClass = "org.grouplens.samantha.server.recommender.StandardRecommenderConfig"
      retriever = "MultipleBlendingMovieRetriever"
      ranker = "ReinforceAllPredictorBasedRanker"
    }, {
      name = "spirit-bandit-state"
      configClass = "org.grouplens.samantha.server.recommender.StandardRecommenderConfig"
      retriever = "MultipleBlendingMovieRetriever"
      ranker = "BanditStatePredictorBasedRanker"
    }
  ]
  router = {
    configClass = "org.grouplens.samantha.server.router.BasicRouterConfig"
    recommenderKey = "recommender"
    predictorKey = "predictor"
  }
  evaluators = [
    {
      name = "BinaryRewardEvaluator"
      configClass = "org.grouplens.samantha.server.evaluator.PredictionEvaluatorConfig"
      indexers = ["StandardOutputIndexer"]
      predictionIndexers = []
      indexerType = "BinaryRewardEvaluator"
      predictorKey = "predictor"
      groupKey = "userId"
      entityDaosConfig = ${samantha.movielens.entityDaosConfig}
      daoConfigKey = "evaluatorDaoConfig"
      metrics = [
        {
          metricConfigClass = "org.grouplens.samantha.server.evaluator.metric.AUCConfig"
          labelName = "delayedReward"
          aucType = "GLOBAL"
        }, {
          metricConfigClass = "org.grouplens.samantha.server.evaluator.metric.AUCConfig"
          labelName = "delayedReward"
          aucType = "PERGROUP"
        }
      ]
    }, {
      name = "BinaryClassificationEvaluator"
      configClass = "org.grouplens.samantha.server.evaluator.PredictionEvaluatorConfig"
      predictionIndexers = []
      indexers = ["StandardOutputIndexer"]
      indexerType = "BinaryClassificationEvaluator"
      predictorKey = "predictor"
      groupKey = "userId"
      entityDaosConfig = ${samantha.movielens.entityDaosConfig}
      daoConfigKey = "evaluatorDaoConfig"
      metrics = [
        {
          metricConfigClass = "org.grouplens.samantha.server.evaluator.metric.AUCConfig"
          labelName = "action"
          aucType = "GLOBAL"
        }, {
          metricConfigClass = "org.grouplens.samantha.server.evaluator.metric.AUCConfig"
          labelName = "action"
          aucType = "PERGROUP"
        }
      ]
    }, {
      name = "PredictionEvaluator"
      configClass = "org.grouplens.samantha.server.evaluator.PredictionEvaluatorConfig"
      predictionIndexers = []
      indexers = ["StandardOutputIndexer"]
      indexerType = "PredictionEvaluator"
      predictorKey = "predictor"
      groupKey = "userId"
      entityDaosConfig = ${samantha.movielens.entityDaosConfig}
      daoConfigKey = "evaluatorDaoConfig"
      metrics = [
        {
          metricConfigClass = "org.grouplens.samantha.server.evaluator.metric.MAEConfig"
          labelName = "rating"
        }, {
          metricConfigClass = "org.grouplens.samantha.server.evaluator.metric.RMSEConfig"
          labelName = "rating"
        }
      ]
    }, {
      name = "RecommendationEvaluator"
      configClass = "org.grouplens.samantha.server.evaluator.RecommendationEvaluatorConfig"
      recommendationIndexers = []
      indexers = ["StandardOutputIndexer"]
      indexerType = "RecommendationEvaluator"
      recommenderKey = "recommender"
      entityDaosConfig = ${samantha.movielens.entityDaosConfig}
      daoConfigKey = "evaluatorDaoConfig"
      groupKey = "userId"
      metrics = [
        {
          metricConfigClass = "org.grouplens.samantha.server.evaluator.metric.MAPConfig"
          itemKeys = ["movieId"]
          ratingKey = "action"
          leastRating = 0.5
          N = [5, 10]
        }
      ]
    }
  ]
}
